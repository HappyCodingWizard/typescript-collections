you need to be careful with generics. If you do not provide a type 'any' is assumed
---
Only index on string and number
Recommend you only use number. 
once you go into an index operation you are in any land 
----
Declare array of a particular type
var array:K[] = [];
-----


Errors
----
private function of same class but another instance should be accessible but isn't
-------------------------------------
This will become any unless explicitly mentioned: 
var currentNode:ILinkedListNode<T> = this.firstNode;
-----------------------
array shows up as any in generics : 
var array:K[] = []; 